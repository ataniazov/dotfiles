# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
#
# This config file uses keycodes (bindsym) and was written for the DVORAK
# layout.
#
# To get a config file with the same key positions, but for your current
# layout, use the i3-config-wizard
#

# Modifiers
## Available Modifiers:
## Mod1-Mod5, Shift, Control

## Set main modifier
## Windows (Mod4)
set $mod mod4

## Set alternative modifier
## Alt (Mod1)
set $altmod mod1

# Fonts
## Syntax:
## font <X core font description>
## font pango:<family list> [<style options>] <size>
#font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
#font pango:DejaVu Sans Mono 10
#font pango:DejaVu Sans Mono, Terminus Bold Semi-Condensed 11
#font pango:Terminus 11px

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8
#font pango:monospace 16

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8
font pango:DejaVu Sans Mono 16
#font pango:Ubuntu Mono 16

# Before i3 v4.8, we used to recommend this one as the default:
#font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
#font -misc-fixed-medium-r-normal--13-120-75-75-C-80-iso10646-1
#font -misc-fixed-medium-r-normal--15-140-75-75-C-90-iso10646-1
#font -misc-fixed-medium-r-normal--18-120-100-100-C-90-iso10646-1
#font -misc-fixed-medium-r-normal--20-200-75-75-C-100-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn't scale on retina/hidpi displays.

# Keyboard bindings
## Syntax:
## bindsym [--release] [<Group>+][<Modifiers>+]<keysym> command
## bindcode [--release] [<Group>+][<Modifiers>+]<keycode> command

# Mouse bindings
## Syntax:
## bindsym [--release] [--border] [--whole-window] [--exclude-titlebar] [<Modifiers>+]button<n> command

# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $up l
#set $down k
set $down slash
set $left j
#set $right semicolon
set $right k

# The floating modifier
## Syntax: floating_modifier <Modifier>

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+c exec --no-startup-id i3-sensible-terminal

# kill focused window
#bindsym $mod+Shift+q kill
bindsym $mod+minus kill

# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id dmenu_run
#bindsym $mod+d exec --no-startup-id dmenu_run -i -fn Terminus:style=Regular -nb \#000000 -nf \#ffffff -sb \#ffffff -sf \#000000
#bindsym $mod+d exec --no-startup-id dmenu_run -i -fn monospace-16 -nb \#000000 -nf \#ffffff -sb \#ffffff -sf \#000000
bindsym $mod+d exec --no-startup-id dmenu_run -i -fn 'DejaVu Sans Mono-16' -nb \#000000 -nf \#ffffff -sb \#ffffff -sf \#000000

# A more modern dmenu replacement is rofi:
# bindsym $mod+d exec "rofi -modi drun,run -show drun"

# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
#bindsym $mod+d exec --no-startup-id i3-dmenu-desktop --dmenu="dmenu -i -fn Terminus:style=Regular -nb \#000000 -nf \#ffffff -sb \#ffffff -sf \#000000"

# Focusing containers
## Syntax:
## <criteria> focus
## focus left|right|down|up
## focus parent|child|floating|tiling|mode_toggle
## focus next|prev [sibling]
## focus output left|right|up|down|primary|<output>

# change focus
#bindsym $mod+j focus left
bindsym $mod+$left focus left
#bindsym $mod+k focus down
bindsym $mod+$down focus down
#bindsym $mod+l focus up
bindsym $mod+$up focus up
#bindsym $mod+semicolon focus right
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Moving containers
## Syntax:
## move <left|right|down|up> [<amount> [px|ppt]]
## move position <pos_x> [px|ppt] <pos_y> [px|ppt]
## move [absolute] position center
## move position mouse

# move focused window
#bindsym $mod+Shift+j move left
bindsym $mod+Shift+$left move left
#bindsym $mod+Shift+k move down
bindsym $mod+Shift+$down move down
#bindsym $mod+Shift+l move up
bindsym $mod+Shift+$up move up
#bindsym $mod+Shift+semicolon move right
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Splitting containers
## Syntax: split vertical|horizontal|toggle

# split in horizontal orientation
#bindsym $mod+h split h
bindsym $mod+h split horizontal

# split in vertical orientation
#bindsym $mod+v split v
bindsym $mod+v split vertical

# toggle split orientation
bindsym $mod+w split toggle

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# Manipulating layout
## Syntax:
## layout default|tabbed|stacking|splitv|splith
## layout toggle [split|all]
## layout toggle [split|tabbed|stacking|splitv|splith] [split|tabbed|stacking|splitv|splith]…

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
#bindsym $mod+w layout tabbed
bindsym $mod+t layout tabbed
#bindsym $mod+e layout toggle split
bindsym $mod+n layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child
bindsym $mod+o focus child

# Scratchpad
## Syntax:
## move scratchpad
## scratchpad show

# move the currently focused window to the scratchpad
#bindsym $mod+Shift+minus move scratchpad
bindsym $mod+Shift+z move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
#bindsym $mod+minus scratchpad show
bindsym $mod+z scratchpad show

# Changing (named) workspaces/moving to workspaces
## Syntax:
## workspace next|prev|next_on_output|prev_on_output
## workspace back_and_forth
## workspace [--no-auto-back-and-forth] <name>
## workspace [--no-auto-back-and-forth] number <name>
##
## move [--no-auto-back-and-forth] [window|container] [to] workspace <name>
## move [--no-auto-back-and-forth] [window|container] [to] workspace number <name>
## move [window|container] [to] workspace prev|next|current

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
#set $ws10 "10"
set $ws0 "0"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
#bindsym $mod+0 workspace number $ws10
bindsym $mod+0 workspace number $ws0

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
#bindsym $mod+Shift+0 move container to workspace number $ws10
bindsym $mod+Shift+0 move container to workspace number $ws0

# Renaming workspaces
## rename workspace <old_name> to <new_name>
## rename workspace to <new_name>
bindsym $mod+Shift+w exec --no-startup-id i3-input -F 'rename workspace to "%s"' -P 'New name: ' -f -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# Resizing containers/windows
## Syntax:
## resize grow|shrink <direction> [<px> px [or <ppt> ppt]]
## resize set [width] <width> [px | ppt]
## resize set height <height> [px | ppt]
## resize set [width] <width> [px | ppt] [height] <height> [px | ppt]

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        #bindsym j          resize shrink width 10 px or 10 ppt
        bindsym $left       resize shrink width 10 px or 10 ppt
        #bindsym k          resize grow height 10 px or 10 ppt
        bindsym $down       resize grow height 10 px or 10 ppt
        #bindsym l          resize shrink height 10 px or 10 ppt
        bindsym $up         resize shrink height 10 px or 10 ppt
        #bindsym semicolon  resize grow width 10 px or 10 ppt
        bindsym $right      resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left        resize shrink width 10 px or 10 ppt
        bindsym Down        resize grow height 10 px or 10 ppt
        bindsym Up          resize shrink height 10 px or 10 ppt
        bindsym Right       resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#        status_command i3status
#}

#######################################################################
# automatically start i3-config-wizard to offer the user to create a
# keysym-based config which used their favorite modifier (alt or windows)
#
# i3-config-wizard will not launch if there already is a config file
# in ~/.config/i3/config (or $XDG_CONFIG_HOME/i3/config if set) or
# ~/.i3/config.
#
# Please remove the following exec line:
#######################################################################
#exec i3-config-wizard

##############################################################################
#                               USER SETTINGS                                #
##############################################################################

# i3wm

## Constraining floating window size
## Syntax:
## floating_minimum_size <width> x <height>
## floating_maximum_size <width> x <height>

## Orientation for new workspaces
## Syntax: default_orientation horizontal|vertical|auto

## Layout mode for new containers
## Syntax: workspace_layout default|stacking|tabbed

## Window title alignment
## Syntax: title_align left|center|right

## Default border style for new windows
## Syntax:
## default_border normal|none|pixel
## default_border normal|pixel <px>
## default_floating_border normal|none|pixel
## default_floating_border normal|pixel <px>

## Hiding borders adjacent to the screen edges
## Syntax: hide_edge_borders none|vertical|horizontal|both|smart

## Changing colors
## You can change all colors which i3 uses to draw the window decorations
## Syntax:
## <colorclass> <border> <background> <text> <indicator> <child_border>
## Colors are in HTML hex format (#rrggbb), see the following example:
## Examples (default colors):
## class                  border  backgr. text    indicator child_border
# client.focused          #4c7899 #285577 #ffffff #2e9ef4   #285577
# client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
# client.unfocused        #333333 #222222 #888888 #292d2e   #222222
# client.urgent           #2f343a #900000 #ffffff #900000   #900000
# client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

# client.background       #ffffff

#######################################################################
## class                 border  backgr. text    indicator child_border
#client.focused          #4c7899 #285577 #ffffff #2e9ef4   #285577
#client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
#client.unfocused        #333333 #222222 #888888 #292d2e   #222222
#client.urgent           #2f343a #900000 #ffffff #900000   #900000
#client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

#client.background       #ffffff
#######################################################################

## Focus follows mouse
## Syntax: focus_follows_mouse yes|no
focus_follows_mouse no

## Mouse warping
## Syntax: mouse_warping output|none
#mouse_warping none

## Popups during fullscreen mode
## Syntax: popup_during_fullscreen smart|ignore|leave_fullscreen

## Focus wrapping
## Syntax: focus_wrapping yes|no|force|workspace

## Forcing Xinerama
## Syntax: force_xinerama yes|no

## Automatic back-and-forth when switching to the current workspace
## Syntax: workspace_auto_back_and_forth yes|no
workspace_auto_back_and_forth yes

## Delaying urgency hint reset on workspace change
## Syntax: force_display_urgency_hint <timeout> ms
#force_display_urgency_hint 500 ms

## Focus on window activation
## Syntax: focus_on_window_activation smart|urgent|focus|none

## Drawing marks on window decoration
## Syntax: show_marks yes|no

# Configuring i3bar
## Start i3bar to display a workspace bar (plus the system information i3status
## finds out, if available)
bar {
        # i3bar command
        ## Syntax: i3bar_command <command>

        # Statusline command
        ## Syntax: status_command <command>
        #status_command i3status
        #status_command i3status --config $HOME/.config/i3status/config
        status_command exec $HOME/.config/i3/net-speed.sh

        # Display mode
        ## Syntax:
        ## mode dock|hide|invisible
        ## hidden_state hide|show
        ## modifier <Modifier>|none

        # Mouse button commands
        ## Syntax: bindsym [--release] button<n> <command>
        # disable clicking on workspace buttons
        #bindsym button1 nop
        # disable mouse wheel scrolling change workspace
        bindsym button4 nop
        bindsym button5 nop
        # Take a screenshot by middle clicking on the bar
        #bindsym button2 exec --no-startup-id xfce4-screenshooter -f -s $HOME/Pictures/ # entire screen

        # Bar ID
        ## Syntax: id <bar_id>

        # Position
        ## Syntax: position top|bottom
        position top

        # Output(s)
        ## Syntax: output primary|nonprimary|<output>

        # Tray output
        ## Syntax: tray_output none|primary|<output>
        #tray_output primary

        # Tray padding
        ## Syntax: tray_padding <px> [px]
        # Obey Fitts's law
        #tray_padding 0

        # Font
        ## Syntax: font <font>
        #font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
        #font pango:DejaVu Sans Mono 10

        # Custom separator symbol
        ## Syntax: separator_symbol <symbol>

        # Workspace buttons
        ## Syntax: workspace_buttons yes|no

        # Minimal width for workspace buttons
        ## Syntax: workspace_min_width <px> [px]

        # Strip workspace numbers/name
        ## Syntax:
        ## strip_workspace_numbers yes|no
        ## strip_workspace_name yes|no

        # Binding Mode indicator
        ## Syntax: binding_mode_indicator yes|no

        # Colors
        colors {
                ## Syntax: background <color>
                # background #000000
                ## Syntax: statusline <color>
                # statusline #ffffff
                ## Syntax: separator <color>
                # separator  #666666

                # focused_background #000000
                # focused_statusline #ffffff
                # focused_separator  #666666

                ## Syntax: <colorclass> <border> <background> <text>
                ## class             border  backgr. text
                # focused_workspace  #4c7899 #285577 #ffffff
                # active_workspace   #333333 #5f676a #ffffff
                # inactive_workspace #333333 #222222 #888888
                # urgent_workspace   #2f343a #900000 #ffffff
                # binding_mode       #2f343a #900000 #ffffff

                ###########################################
                ## class            border  backgr. text
                #focused_workspace  #4c7899 #285577 #ffffff
                #active_workspace   #333333 #5f676a #ffffff
                #inactive_workspace #333333 #222222 #888888
                #urgent_workspace   #2f343a #900000 #ffffff
                #binding_mode       #2f343a #900000 #ffffff
                ###########################################
        }

        # Transparency
        ## Syntax: i3bar_command i3bar --transparency
}

## Toggle between dock mode and hide mode
bindsym $mod+b bar mode toggle

## Toggle between hide state and show state
#bindsym $mod+Shift+b bar hidden_state toggle

## Changing border style
## Syntax:
## border normal|pixel|toggle [<n>]
## border none

## Toggle the different border styles
bindsym $mod+Shift+b border toggle

## Toggle global fullscreen mode
bindsym $mod+Shift+f fullscreen toggle global

## Toggle between stacking/tabbed/splith/splitv
bindsym $mod+Shift+n layout toggle all

## The middle button and modifers over a titlebar kills the window
bindsym --release $mod+$altmod+button2 kill

## The middle button and a modifer over any part of the window toggles floating
bindsym --whole-window $mod+button2 floating toggle

## Sticky floating windows
## Syntax: sticky enable|disable|toggle
#bindsym --release $mod+Shift+button2 sticky toggle
bindsym --whole-window $mod+Shift+button2 sticky toggle

# Moving containers/workspaces to RandR outputs
## Syntax:
## move container to output left|right|down|up|current|primary|<output>
## move workspace to output left|right|down|up|current|primary|<output>

# Move the current workspace to the next output
bindsym $mod+$altmod+$left move workspace to output left
bindsym $mod+$altmod+$down move workspace to output down
bindsym $mod+$altmod+$up move workspace to output up
bindsym $mod+$altmod+$right move workspace to output right

## alternatively, you can use the cursor keys
bindsym $mod+$altmod+Left move workspace to output left
bindsym $mod+$altmod+Down move workspace to output down
bindsym $mod+$altmod+Up move workspace to output up
bindsym $mod+$altmod+Right move workspace to output right

# Automatically starting applications on i3 startup
## Syntax:
## exec [--no-startup-id] <command>
## exec_always [--no-startup-id] <command>

## Set the wallpaper
exec_always --no-startup-id xsetroot -solid black
#exec_always --no-startup-id feh --no-fehbg --bg-fill $HOME/Pictures/background.png

## Set dvorak as keyboard layout
#exec_always --no-startup-id setxkbmap -layout "us(dvorak-intl),tr" -option -option "grp:alt_space_toggle,grp_led:scroll,shift:both_capslock,caps:hyper"
#exec_always --no-startup-id setxkbmap -layout "custom,ru(phonetic_dvorak)" -option -option "grp:alt_space_toggle,grp_led:scroll,shift:both_capslock,caps:hyper"
exec_always --no-startup-id setxkbmap -layout "custom,ru(phonetic_dvorak)" -option -option "grp:alt_space_toggle,grp_led:scroll"

## Set caps-lock as a modifier
#exec_always --no-startup-id xmodmap -e "clear lock" ; xmodmap -e "keycode 66 = Super_L" ; xmodmap -e "add mod4 = Super_L"
#exec_always --no-startup-id xmodmap -e "keycode 192 = Super_L"
#exec_always --no-startup-id xmodmap -e "clear lock" ; xmodmap -e "clear mod3" ; xmodmap -e "add mod3 = XF86Launch5"

## Startup daemons
exec --no-startup-id $HOME/.config/i3/startup.sh

## Set WM_NAME as "LG3D" (Looking Glass 3D) to fix Java GUI
exec_always --no-startup-id wmname LG3D

# Sound controls
#set $refresh_i3status killall -SIGUSR1 i3status

## PulseAudio get active sink number
#set $sink pactl list short sinks | grep -i `pactl info | grep -i 'Default Sink' | awk '{print $3}'` | cut -f1

## PulseAudio sound volume controls
set $decrease_sound pactl set-sink-volume @DEFAULT_SINK@ -5%                            # decrease sound volume
#set $increase_sound pactl set-sink-volume @DEFAULT_SINK@ +5%                           # increase sound volume
set $increase_sound sh -c "pactl set-sink-volume @DEFAULT_SINK@ $([ $((`pactl list sinks | grep -A10 $(pactl info | grep -i 'Default Sink' | awk '{print $3}') | grep '^[[:space:]]Volume:' | awk -F"/|%" '{print $2}'` + 5)) -lt 100 ] && printf "+5" || printf "100")%"
set $mute_unmute_sound pactl set-sink-mute @DEFAULT_SINK@ toggle                        # mute sound
#set $mute_unmute_mic pactl set-source-mute @DEFAULT_SOURCE@ toggle                     # mute microphone

## ALSA Audio sound volume controls
#set $decrease_sound amixer set Master 5%-                                              # decrease sound volume
#set $increase_sound amixer set Master 5%+                                              # increase sound volume
#set $mute_unmute_sound amixer set Master toggle                                        # mute sound
#set $mute_unmute_mic amixer set Capture toggle                                         # mute microphone

## Sound volume controls with Multimedia keys
bindsym XF86AudioLowerVolume exec --no-startup-id $decrease_sound && $refresh_i3status  # decrease sound volume
bindsym XF86AudioRaiseVolume exec --no-startup-id $increase_sound && $refresh_i3status  # increase sound volume
bindsym XF86AudioMute exec --no-startup-id $mute_unmute_sound && $refresh_i3status      # mute sound
#bindsym XF86AudioMicMute exec --no-startup-id $mute_unmute_mic && $refresh_i3status    # mute microphone

## Sound volume controls with PRINT, SCROLL-LOCK & PAUSE keys
bindsym Print exec --no-startup-id $decrease_sound && $refresh_i3status                 # decrease sound volume
bindsym Scroll_Lock exec --no-startup-id $increase_sound && $refresh_i3status           # increase sound volume
bindsym Pause exec --no-startup-id $mute_unmute_sound && $refresh_i3status              # mute sound

# Screen brightness controls
#bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight -inc 20                    # increase screen brightness
#bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -dec 20                  # decrease screen brightness

# cmus music player controls
set $player_next cmus-remote --next
set $player_prev cmus-remote --prev
set $player_play cmus-remote --pause
set $player_stop cmus-remote --stop

# Media player controls
bindsym XF86AudioNext exec --no-startup-id $player_next
bindsym XF86AudioPrev exec --no-startup-id $player_prev
bindsym XF86AudioPlay exec --no-startup-id $player_play
bindsym XF86AudioStop exec --no-startup-id $player_stop

# Application lunch hot-keys
bindsym $mod+g exec --no-startup-id firefox --private-window                            # Firefox
bindsym $mod+Shift+g exec --no-startup-id chromium --incognito                          # Chromium

# Data cleansing to keep your privacy
set $mode_cleanup cleanup
mode "$mode_cleanup" {
        bindsym Shift+y exec --no-startup-id "pkill i3-nagbar ; $HOME/.config/i3/cleanup.sh", mode "default"

        # back to normal: Enter, Escape, $mod+Shift+x
        bindsym Return exec --no-startup-id pkill i3-nagbar, mode "default"
        bindsym Escape exec --no-startup-id pkill i3-nagbar, mode "default"
        bindsym $mod+Shift+x exec --no-startup-id pkill i3-nagbar, mode "default"
}

bindsym $mod+Shift+x mode "$mode_cleanup" ; exec --no-startup-id "i3-nagbar -t warning -m 'Do you really want to delete your session data?' -b '[Y]es, delete it!' 'pkill i3-nagbar ; $HOME/.config/i3/cleanup.sh' ; i3-msg mode \\"default\\""

# Set default Locker
## i3lock
#set $locker i3lock -n -c 000000 -f
## i3lock with DPMS power saving
#set $locker sh -c \\"revert() { xset dpms 0 0 0 ; } ; trap revert HUP INT TERM ; xset +dpms dpms 5 5 5 ; i3lock -n -c 000000 -f ; revert\\"
set $locker sh -c \\"trap \\\\"xset dpms 0 0 0\\\\" HUP INT TERM && xset +dpms dpms 5 5 5 && i3lock -n -c 000000 -f && xset dpms 0 0 0\\"
#exec --no-startup-id xautolock -detectsleep -time 5 -locker "$locker"

# Lock hot-key
bindsym $mod+backslash exec --no-startup-id $locker

# Session control shortcut (Shut Down, Restart, Lock, Log Out of your X session)
set $mode_session Session: [S]hut Down, [R]estart, [L]og Out, [l]ock
mode "$mode_session" {
        bindsym Shift+S exec --no-startup-id systemctl poweroff -i, mode "default"
        bindsym Shift+R exec --no-startup-id systemctl reboot, mode "default"
        bindsym Shift+L exec --no-startup-id i3-msg exit, mode "default"
        bindsym l exec --no-startup-id "pkill i3-nagbar ; $locker", mode "default"

        # back to normal: Enter, Escape, $mod+Shift+e
        bindsym Return exec --no-startup-id pkill i3-nagbar, mode "default"
        bindsym Escape exec --no-startup-id pkill i3-nagbar, mode "default"
        bindsym $mod+Shift+e exec --no-startup-id pkill i3-nagbar, mode "default"
}

bindsym $mod+Shift+e mode "$mode_session" ; exec --no-startup-id "i3-nagbar -t warning -m 'You pressed the session exit shortcut. Do you really want to exit i3? This will end your X session.' -B '[l]ock' 'pkill i3-nagbar ; $locker' -B '[L]og Out' 'i3-msg exit' -B '[R]estart' 'systemctl reboot' -B '[S]hut Down' 'systemctl poweroff -i' ; i3-msg mode \\"default\\""

# Set ratpoison-like behaviour hot-keys
## Send the mouse cursor to the lower right corner of the screen
#bindsym $mod+m exec --no-startup-id xdotool mousemove 0 0
bindsym $mod+m exec --no-startup-id xdotool mousemove $(xdotool getdisplaygeometry)

## Force kill focused window
#bindsym $mod+z exec --no-startup-id xkill -id $(xdotool getwindowfocus)
#bindsym $mod+Shift+underscore exec --no-startup-id xdotool getwindowfocus windowkill
bindsym $mod+$altmod+underscore exec --no-startup-id sh -c "[ ! -z `xdotool getwindowfocus getwindowpid 2> /dev/null` ] && xdotool getwindowfocus windowkill"

# Take a screenshot
bindsym --release $mod+Print exec --no-startup-id xfce4-screenshooter -w -s $HOME/Pictures/             # active window
bindsym --release $mod+Shift+Print exec --no-startup-id xfce4-screenshooter -f -s $HOME/Pictures/       # entire screen
bindsym --release $mod+Control+Print exec --no-startup-id xfce4-screenshooter -r -s $HOME/Pictures/     # select a region

# Java
#bindsym $mod+Shift+i exec --no-startup-id idea         # Intellij IDEA

# Multi-Monitor settings
#bindsym $mod+x exec --no-startup-id sh -c "$HOME/.screenlayout/multihead.sh ; i3-msg restart"

# Arbitrary commands for specific windows (for_window)
## Syntax: for_window <criteria> <command>
# make the current container borderless
for_window [class="(?i)chromium"] border none
for_window [class="(?i)firefox"] border none
for_window [class="(?i)librewolf"] border none

# VIM-like marks (mark/goto)
## Syntax:
## mark [--add|--replace] [--toggle] <identifier>
## [con_mark="identifier"] focus
## unmark <identifier>
#bindsym $mod+Shift+grave exec --no-startup-id i3-input -F 'mark --toggle %s' -l 1 -P 'Mark: ' -f -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
#bindsym $mod+grave exec --no-startup-id i3-input -F '[con_mark="%s"] focus' -l 1 -P 'Go to: ' -f -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
set $marker "MARK"
bindsym $mod+Shift+grave mark --toggle $marker
bindsym $mod+grave [con_mark=$marker] focus

# Swapping containers
## Syntax: swap container with id|con_id|mark <arg>
# Swaps the focused container with the marked container
#bindsym $mod+$altmod+grave exec --no-startup-id i3-input -F 'swap container with mark %s' -l 1 -P 'Swap mark: ' -f -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
bindsym $mod+$altmod+grave swap container with mark $marker

# Moving containers/windows to marks
## move window|container to mark <mark>
# Move the focused container to another container with a specific mark
#bindsym $mod+Control+grave exec --no-startup-id i3-input -F 'move container to mark %s' -l 1 -P 'Move mark: ' -f -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
bindsym $mod+Control+grave move container to mark $marker

# Nop
## Syntax: nop [<comment>]
# disable mouse wheel scrolling change focus
#bindsym button4 nop
#bindsym button5 nop

# TESTING CONFIGURATIONS

# Don’t focus window upon opening
## Syntax: no_focus <criteria>

# Variables
## Syntax: set $<name> <value>

# X resources
## Syntax: set_from_resource $<name> <resource_name> <fallback>

# Automatically putting clients on specific workspaces
## Syntax:
## assign <criteria> [→] [workspace] [number] <workspace>
## assign <criteria> [→] output left|right|up|down|primary|<output>

# Automatically putting workspaces on specific screens
## Syntax: workspace <workspace> output <output1> [output2]…

# Binding modes
## Syntax:
##  config directive
## mode [--pango_markup] <name>
##  command
## mode <name>

# Press $mod+w or control+w followed by either f, c, Escape or Return to launch firefox,
# chromium or return to the default mode, respectively.
#set $mode_launcher Launch: [f]irefox [c]hromium
#bindsym $mod+w mode "$mode_launcher"
#bindsym control+w mode "$mode_launcher"

#mode "$mode_launcher" {
#        bindsym f exec --no-startup-id firefox, mode "default"
#        bindsym c exec --no-startup-id chromium, mode "default"
#
#        # back to normal: Enter, Escape, $mod+w or control+w
#        bindsym Return mode "default"
#        bindsym Escape mode "default"
#        bindsym $mod+w mode "default"
#        bindsym control+w mode "default"
#}

# Interprocess communication
## Examples: ipc-socket ~/.i3/i3-ipc.sock

# startup daemons
#exec --no-startup-id sleep 0.5 && (/usr/libexec/at-spi-bus-launcher --launch-immediately & /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1 & start-pulseaudio-x11 & xfsettingsd & xfce4-power-manager & )

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
#exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
#exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
#exec --no-startup-id nm-applet
